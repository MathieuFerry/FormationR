# On liste les packages dont on a besoin dans un vecteur nommé load.lib.
load.lib <- c("openxlsx","tidyverse", "questionr", "kableExtra", "esquisse", "FactoMineR", "explor","factoextra", "rainette", "quanteda", "quanteda.textstats", "quanteda.textplots","rainette")
install.lib <- load.lib[!load.lib %in% installed.packages()] # On regarde les paquets qui ne sont pas installés
for (lib in install.lib) install.packages(lib,dependencies=TRUE) # On installe ceux-ci
sapply(load.lib,require,character=TRUE) # Et on charge tous les paquets
setwd("/./Volumes/Macintosh HD/Users/mathieuferry/Documents/Enseignements/Année 2024-2025/Formation R/Tutoriel/Data")
textes<-read.xlsx("base_de_donnees2025-04-26_wokisme.xlsx")
str(textes)
# L'exploration du corpus ---------------------------------------------------
#...
textes$Date
Sys.setlocale("LC_TIME", "fr_FR.UTF-8")
textes$Date_propre <- as.Date(textes$Date, format = "%d %B %Y")
# Extraire l'année
textes$Annee <- format(textes$Date_propre, "%Y")
textes$Annee <- str_extract(textes$Date, "[0-9]{4}$")
esquisser(textes)
#esquisser(textes)
ggplot(textes) +
aes(x = Date_propre) +
geom_histogram(bins = 30L, fill = "#000000") +
labs(x = "Période", y = "Nombre d'articles") +
theme_light() +
theme(
axis.title.y = element_text(size = 18L),
axis.title.x = element_text(size = 18L),
axis.text.y = element_text(size = 18L),
axis.text.x = element_text(size = 14L),
legend.text = element_text(size = 18L),
legend.title = element_text(size = 18L),
strip.text = element_text(size = 18L) #Augmenter taille des labels des facets
) +
facet_wrap(vars(NomSource))
textes$Textec = str_replace_all(textes$Texte, "[‘’´`ʻʼʽʾʿˊˋ˘˙’']", " ")
corpus <- corpus(textes$Textec)
tok <- tokens(corpus, remove_punct = TRUE,
remove_symbols=TRUE,
remove_numbers =TRUE)
textes$nmots <- ntoken(tok)
stopwords_url <- "https://raw.githubusercontent.com/gillesbastin/french_stopwords/main/french_stopwords.csv"
stop_fr <- read_csv2(stopwords_url)
mot_woke<-c("wokisme","woke","wokiste")
tok <- tokens_remove(tok,c(stop_fr$token,mot_woke))
dtm <- dfm(tok, tolower = TRUE)
dtm <- dfm_trim(dtm, min_docfreq = 5)
textplot_wordcloud(dtm, random_order = F, rotation = 0.25,min_size =1,max_words = 100,
color = RColorBrewer::brewer.pal(8, "Dark2"))
# AFC ---------------------------------------------------------------------
#On ne garde que les termes mentionnés au moins 20 x ... !
dtm_reduc <- dfm_trim(dtm, min_docfreq = 20)
#On convertit la matrice en un data frame
dtm_pour_afc <- convert(dtm_reduc, to = "data.frame")
#On enlève la colonne doc_id, convertie en rownames
rownames(dtm_pour_afc) <- dtm_pour_afc$doc_id
dtm_pour_afc$doc_id <- NULL
#On ajoute trois colonnes de métadonnées sur les textes
dtm_pour_afc<-cbind(NomSource=textes$NomSource,Annee=textes$Annee,dtm_pour_afc)
ca<-CA(dtm_pour_afc,graph=F,quali.sup=1:2)
textplot_wordcloud(dtm, random_order = F, rotation = 0.25,min_size =1,max_words = 100,
color = RColorBrewer::brewer.pal(8, "Dark2"))
textplot_wordcloud(dtm, random_order = F, rotation = 0.25,min_size =1,max_words = 200,
color = RColorBrewer::brewer.pal(8, "Dark2"))
textplot_wordcloud(dtm, random_order = F, rotation = 0.25,min_size =1,max_words = 500,
color = RColorBrewer::brewer.pal(8, "Dark2"))
warnings()
# AFC ---------------------------------------------------------------------
#On ne garde que les termes mentionnés au moins 20 x ... !
dtm_reduc <- dfm_trim(dtm, min_docfreq = 20)
#On convertit la matrice en un data frame
dtm_pour_afc <- convert(dtm_reduc, to = "data.frame")
#On enlève la colonne doc_id, convertie en rownames
rownames(dtm_pour_afc) <- dtm_pour_afc$doc_id
dtm_pour_afc$doc_id <- NULL
#On ajoute trois colonnes de métadonnées sur les textes
dtm_pour_afc<-cbind(NomSource=textes$NomSource,Annee=textes$Annee,dtm_pour_afc)
ca<-CA(dtm_pour_afc,graph=F,quali.sup=1:2)
library(ggrepel)
library(factoextra)
fviz_eig(ca,ncp=20)
fviz_ca_col(ca,select.col=list(contrib=200),axes = c(1, 2), repel = TRUE)
quali_coord <- as.data.frame(ca$quali.sup$coord)
quali_coord$mod <- rownames(quali_coord)
quali_coord$mod <- str_remove(quali_coord$mod, "^[^\\.]+\\.")
ggplot(quali_coord, aes(x = `Dim 1`, y = `Dim 2`, label = mod)) +
geom_vline(xintercept = 0, linetype = "dashed")+
geom_hline(yintercept = 0, linetype = "dashed")+
geom_point(size = .5) +
geom_text_repel(size = 4) +
theme_minimal() +
labs(title = "Modalités des variables qualitatives supplémentaires",
x = "Dimension 1", y = "Dimension 2")
explor(ca)
res <- rainette(dtm, k = 10)
rainette_explor(res, dtm, corpus)
fviz_ca_col(ca,select.col=list(contrib=200),axes = c(1, 2), repel = TRUE)
quali_coord <- as.data.frame(ca$quali.sup$coord)
quali_coord$mod <- rownames(quali_coord)
quali_coord$mod <- str_remove(quali_coord$mod, "^[^\\.]+\\.")
ggplot(quali_coord, aes(x = `Dim 1`, y = `Dim 2`, label = mod)) +
geom_vline(xintercept = 0, linetype = "dashed")+
geom_hline(yintercept = 0, linetype = "dashed")+
geom_point(size = .5) +
geom_text_repel(size = 4) +
theme_minimal() +
labs(title = "Modalités des variables qualitatives supplémentaires",
x = "Dimension 1", y = "Dimension 2")
rainette_explor(res, dtm, corpus)
